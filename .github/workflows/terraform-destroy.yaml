name: "Terraform Destroy IaC Management Pipeline with GitHub Actions"
on:
  workflow_dispatch:

env:
 # verbosity setting for Terraform logs
 TF_LOG: INFO
 # Credentials for deployment to AWS
 AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
 AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
 # S3 bucket for the Terraform state
 BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE}}

jobs:
  terraform-destroy:
    if: github.ref == 'refs/heads/main'
    name: "Destroy - Terraform Infrastructure Change Management"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        # We keep Terraform files in the terraform directory.
        working-directory: ./terraform
    steps:
      - name: Checkout the repository to the runner
        uses: actions/checkout@v2
 
      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v2
        with:
            terraform_version: 1.11.4
        
      - name: Terraform init
        id: init
        run: terraform init -backend-config="bucket=$BUCKET_TF_STATE"
      
      - name: Terraform plan Destroy
        id: plan-destroy
        if: github.event_name == 'pull_request'
        run: terraform plan -destroy -no-color -input=false
        continue-on-error: true
      
      - name: Terraform Plan Status
        if: steps.plan-destroy.outcome == 'failure'
        run: exit 1
  
      - name: Terraform Apply Destroy
        if: github.ref == 'refs/heads/main'
        run: terraform apply -destroy -auto-approve -input=false